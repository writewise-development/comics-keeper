name: hoard-helper

services:
  hoardhelper.web:
    build:
      args:
        CERT_CRT: ${CERT_CRT_FILEPATH}
        PORT: ${PORT_WEB}
        PROJECT: ${WEB_PROJECT_NAME}
      context: .
      dockerfile: ${UTLITIES_DOCKERFILES_PATH}/aspnetcore8-web.Dockerfile
      target: final
    labels:
      project: ${COMPOSE_PROJECT_NAME}
    container_name: ${WEB_CONTAINER}
    env_file: ${CERT_ENV_FILEPATH}
    environment:
      Api__Url: https://localhost:${PORT_API}
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_HTTPS_PORTS: ${PORT_WEB}
      Kestrel__Certificates__Default__Path: ${CERT_VOLPATH}/${CERT_PFX}
      SessionCookie__ExpireTimeSpan: ${SESSIONCOOKIE_TIMESPAN}
      SessionCookie__Name: ${SESSIONCOOKIE_NAME}
    extra_hosts:
      localhost: host-gateway
    image: ${COMPOSE_PROJECT_NAME}/${WEB_IMAGE}:local
    ports:
      - ${PORT_WEB}:${PORT_WEB}
    stdin_open: true
    tty: true
    volumes:
      - ./${CERT_FOLDERPATH}:${CERT_VOLPATH}      

  hoardhelper.pgdata:
    build:
      args:
        DB_NAME: ${DB_NAME}
        CERT_CRT: ${CERT_CRT_FILEPATH}
        CERT_KEY: ${CERT_KEY_FILEPATH}
      context: .
      dockerfile: ${UTLITIES_DOCKERFILES_PATH}/postgres.dev.Dockerfile
      labels:
        project: ${COMPOSE_PROJECT_NAME}
      target: local
    container_name: ${DB_CONTAINER}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    extra_hosts:
      localhost: host-gateway
    image: ${COMPOSE_PROJECT_NAME}/${DB_IMAGE}:local
    ports:
      - ${PORT_DB}:5432
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data

volumes:
  postgresql-data:
